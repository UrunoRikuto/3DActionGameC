name: Set Task Created Date on Issue

on:
  issues:
    types: [opened]

jobs:
  set-task-created-date:
    runs-on: ubuntu-latest
    steps:
      - name: Set Task Created Date
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const issueNodeId = context.payload.issue.node_id;
            const projectNumber = 7;
            const fieldName = "タスク作成日";

            const projects = await github.graphql(`
              query {
                viewer {
                  projectsV2(first: 10) {
                    nodes {
                      id
                      number
                      title
                    }
                  }
                }
              }
            `);

            const project = projects.viewer.projectsV2.nodes.find(p => p.number === projectNumber);
            if (!project) {
              throw new Error('Project not found');
            }

            const projectId = project.id;

            const addItemResponse = await github.graphql(`
              mutation($projectId: ID!, $contentId: ID!) {
                addProjectV2ItemById(input: {
                  projectId: $projectId,
                  contentId: $contentId
                }) {
                  item {
                    id
                  }
                }
              }
            `, {
              projectId,
              contentId: issueNodeId,
            });

            const itemId = addItemResponse.addProjectV2ItemById.item.id;

            const fieldQuery = await github.graphql(`
              query($projectId: ID!) {
                node(id: $projectId) {
                  ... on ProjectV2 {
                    fields(first: 20) {
                      nodes {
                        ... on ProjectV2FieldCommon {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            `, { projectId });

            const field = fieldQuery.node.fields.nodes.find(f => f.name === fieldName);
            if (!field) {
              throw new Error('Field not found');
            }

            const fieldId = field.id;
            const today = new Date().toISOString().split('T')[0];

            await github.graphql(`
              mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $value: Date!) {
                updateProjectV2ItemFieldValue(input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: $fieldId,
                  value: { date: $value }
                }) {
                  projectV2Item {
                    id
                  }
                }
              }
            `, {
              projectId,
              itemId,
              fieldId,
              value: today,
            });
