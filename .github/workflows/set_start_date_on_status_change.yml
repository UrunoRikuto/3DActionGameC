name: Set Start Date When Status is In Progress

on:
  schedule:
    - cron: '*/15 * * * *' # 15分ごとに実行
  workflow_dispatch:

jobs:
  update-start-date:
    runs-on: ubuntu-latest
    steps:
      - name: Set Start Date on Status Change
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const projectNumber = 7;
            const statusFieldName = "ステータス";       // ← ステータスのフィールド名
            const statusValue = "進行中";               // ← ステータスの選択肢ラベル
            const startDateFieldName = "取り掛かり日";   // ← 日付を入れるフィールド名

            // プロジェクト取得
            const projects = await github.graphql(`
              query {
                viewer {
                  projectsV2(first: 10) {
                    nodes {
                      id
                      number
                      title
                    }
                  }
                }
              }
            `);

            const project = projects.viewer.projectsV2.nodes.find(p => p.number === projectNumber);
            if (!project) throw new Error('Project not found');
            const projectId = project.id;
            console.log('📌 Project ID:', projectId);

            // プロジェクトアイテム＋フィールド情報取得
            const items = await github.graphql(`
              query($projectId: ID!) {
                node(id: $projectId) {
                  ... on ProjectV2 {
                    items(first: 100) {
                      nodes {
                        id
                        fieldValues(first: 30) {
                          nodes {
                            ... on ProjectV2ItemFieldTextValue {
                              field {
                                ... on ProjectV2FieldCommon {
                                  name
                                  id
                                }
                              }
                              text
                            }
                            ... on ProjectV2ItemFieldDateValue {
                              field {
                                ... on ProjectV2FieldCommon {
                                  name
                                  id
                                }
                              }
                              date
                            }
                            ... on ProjectV2ItemFieldSingleSelectValue {
                              field {
                                ... on ProjectV2FieldCommon {
                                  name
                                  id
                                }
                              }
                              name
                            }
                          }
                        }
                      }
                    }
                    fields(first: 30) {
                      nodes {
                        ... on ProjectV2FieldCommon {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            `, { projectId });

            // フィールドマップ構築
            const fieldMap = {};
            for (const field of items.node.fields.nodes) {
              fieldMap[field.name] = field.id;
            }

            const startDateFieldId = fieldMap[startDateFieldName];
            console.log('📌 取り掛かり日フィールドID:', startDateFieldId);

            const today = new Date().toISOString().split('T')[0];
            console.log('📅 今日の日付:', today);

            for (const item of items.node.items.nodes) {
              let isInProgress = false;
              let alreadySet = false;

              for (const field of item.fieldValues.nodes) {
                const fname = field?.field?.name;

                // ステータス判定（フィールド名と値を明示的に分離）
                if (fname === statusFieldName && field?.name === statusValue) {
                  isInProgress = true;
                }

                // 取り掛かり日が既にセットされているか判定
                if (fname === startDateFieldName && field?.date) {
                  alreadySet = true;
                }
              }

              // 条件に一致すれば更新
              if (isInProgress && !alreadySet) {
                console.log(`⏳ 更新対象: ${item.id} → ${today}`);

                const response = await github.graphql(`
                  mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $value: Date!) {
                    updateProjectV2ItemFieldValue(input: {
                      projectId: $projectId,
                      itemId: $itemId,
                      fieldId: $fieldId,
                      value: {
                        date: $value
                      }
                    }) {
                      projectV2Item {
                        id
                      }
                    }
                  }
                `, {
                  projectId,
                  itemId: item.id,
                  fieldId: startDateFieldId,
                  value: today
                });

                console.log('✅ 更新結果:', JSON.stringify(response, null, 2));
              } else {
                console.log(`🚫 スキップ: ${item.id} | isInProgress: ${isInProgress}, alreadySet: ${alreadySet}`);
              }
            }
